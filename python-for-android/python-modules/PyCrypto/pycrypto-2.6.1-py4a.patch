diff -uprN pycrypto-2.3/setup.cfg pycrypto-2.3.mine//setup.cfg
--- pycrypto-2.3/setup.cfg	1969-12-31 21:00:00.000000000 -0300
+++ pycrypto-2.3.mine//setup.cfg	2011-02-14 17:35:25.000000000 -0300
@@ -0,0 +1,5 @@
+[bdist_egg]
+plat-name=linux-armv
+
+[build_ext]
+include-dirs=bluez
diff -uprN pycrypto-2.3/setup.py pycrypto-2.3.mine//setup.py
--- pycrypto-2.3/setup.py	2010-08-27 01:41:55.000000000 -0300
+++ pycrypto-2.3.mine//setup.py	2011-05-26 14:00:00.000000000 -0300
@@ -36,7 +36,7 @@
 
 __revision__ = "$Id$"
 
-from distutils import core
+import setuptools as core
 from distutils.ccompiler import new_compiler
 from distutils.core import Extension, Command
 from distutils.command.build import build
@@ -145,6 +145,8 @@
                 self.__add_compiler_option("-fprofile-arcs")
                 self.__add_compiler_option("-ftest-coverage")
                 self.compiler.libraries += ['gcov']
+            self.__remove_compiler_option("/usr/lib")
+            self.__remove_compiler_option("/usr/lib64")
 
         # Call the superclass's build_extensions method
         build_ext.build_extensions(self)
@@ -209,7 +211,7 @@
         Return true if the option was found.  Return false otherwise.
         """
         found = 0
-        for attrname in ('compiler', 'compiler_so'):
+        for attrname in ('compiler', 'compiler_so', 'library_dirs'):
             compiler = getattr(self.compiler, attrname, None)
             if compiler is not None:
                 while option in compiler:
@@ -274,6 +276,7 @@
             cmd = "sh configure"    # we use "sh" here so that it'll work on mingw32 with standard python.org binaries
             if self.verbose < 1:
                 cmd += " -q"
+            cmd += " --build=arm-linux-androideabi"
             if os.system(cmd) != 0:
                 raise RuntimeError("autoconf error")
 
@@ -347,7 +350,8 @@
       'author':"Dwayne C. Litzenberger",
       'author_email':"dlitz@dlitz.net",
       'url':"http://www.pycrypto.org/",
-
+      'platforms': ["arm-linux-androideabi"],
+      'license': "Public Domain",
       'cmdclass' : {'build_configure': PCTBuildConfigure, 'build_ext': PCTBuildExt, 'build_py': PCTBuildPy, 'test': TestCommand },
       'packages' : ["Crypto", "Crypto.Hash", "Crypto.Cipher", "Crypto.Util",
                   "Crypto.Random",
